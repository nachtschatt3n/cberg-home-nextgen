---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2025.8.4
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: authentik-secret

    authentik:
      # The error reporting is fully anonymous and helps developers
      error_reporting:
        enabled: true
      redis:
        host: "authentik-redis"

    server:
      replicas: 2
      env:
        - name: AUTHENTIK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: SECRET_AUTHENTIK_SECRET_KEY
        # MySQL/MariaDB configuration
        - name: AUTHENTIK_POSTGRESQL__ENGINE
          value: "django.db.backends.mysql"
        - name: AUTHENTIK_POSTGRESQL__HOST
          value: "mariadb.databases.svc.cluster.local"
        - name: AUTHENTIK_POSTGRESQL__NAME
          value: "authentik"
        - name: AUTHENTIK_POSTGRESQL__USER
          value: "authentik"
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: SECRET_AUTHENTIK_DB_PASSWORD
        - name: AUTHENTIK_POSTGRESQL__PORT
          value: "3306"
        - name: AUTHENTIK_POSTGRESQL__OPTIONS__INIT_COMMAND
          value: "SET sql_mode='STRICT_TRANS_TABLES'"
        - name: AUTHENTIK_POSTGRESQL__OPTIONS__CHARSET
          value: "utf8mb4"
        - name: AUTHENTIK_POSTGRESQL__SSLMODE
          value: "disable"
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Authentik"
          gethomepage.dev/description: "Identity Provider and SSO"
          gethomepage.dev/group: "Authentication"
          gethomepage.dev/icon: "authentik.png"
        hosts:
          - "auth.${SECRET_DOMAIN}"
        paths:
          - "/"
        tls:
          - hosts:
              - "auth.${SECRET_DOMAIN}"

      metrics:
        prometheus:
          serviceMonitor:
            enabled: true
            interval: 30s
            scrapeTimeout: 3s

      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi

    worker:
      replicas: 2
      env:
        - name: AUTHENTIK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: SECRET_AUTHENTIK_SECRET_KEY
        # MySQL/MariaDB configuration
        - name: AUTHENTIK_POSTGRESQL__ENGINE
          value: "django.db.backends.mysql"
        - name: AUTHENTIK_POSTGRESQL__HOST
          value: "mariadb.databases.svc.cluster.local"
        - name: AUTHENTIK_POSTGRESQL__NAME
          value: "authentik"
        - name: AUTHENTIK_POSTGRESQL__USER
          value: "authentik"
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: SECRET_AUTHENTIK_DB_PASSWORD
        - name: AUTHENTIK_POSTGRESQL__PORT
          value: "3306"
        - name: AUTHENTIK_POSTGRESQL__OPTIONS__INIT_COMMAND
          value: "SET sql_mode='STRICT_TRANS_TABLES'"
        - name: AUTHENTIK_POSTGRESQL__OPTIONS__CHARSET
          value: "utf8mb4"
        - name: AUTHENTIK_POSTGRESQL__SSLMODE
          value: "disable"
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi

    redis:
      enabled: true
      auth:
        enabled: false
      master:
        persistence:
          enabled: true
          storageClass: longhorn
          size: 8Gi
      replica:
        persistence:
          enabled: true
          storageClass: longhorn
          size: 8Gi

    postgresql:
      # Use external MariaDB instead
      enabled: false

    geoip:
      enabled: false

    serviceMonitor:
      enabled: true