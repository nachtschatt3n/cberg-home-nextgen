---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless-ngx
  namespace: office
spec:
  interval: 30m
  chart:
    spec:
      chart: paperless-ngx
      version: 0.19.1
      sourceRef:
        kind: HelmRepository
        name: gabe565
        namespace: flux-system
  maxHistory: 1
  install:
    remediation:
      retries: 1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 1
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      pullPolicy: IfNotPresent
    env:
      TZ: UTC
      PAPERLESS_SECRET_KEY:
        valueFrom:
          secretKeyRef:
            name: paperless-ngx-secret
            key: PAPERLESS_KEY
      PAPERLESS_URL: "https://paperless.${SECRET_DOMAIN}"
      PAPERLESS_CONSUMER_DELETE_DUPLICATES: true
      PAPERLESS_CONSUMER_RECURSIVE: true
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: true
      PAPERLESS_CONSUMER_POLLING: 10
      PAPERLESS_CONSUMER_ENABLE_BARCODES: true
      PAPERLESS_EMAIL_HOST: smtp.gmail.com
      PAPERLESS_EMAIL_PORT: 587
      PAPERLESS_EMAIL_USE_TLS: true
      PAPERLESS_EMAIL_USERNAME:
        valueFrom:
          secretKeyRef:
            name: paperless-ngx-secret
            key: PAPERLESS_EMAIL_USERNAME
      PAPERLESS_EMAIL_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: paperless-ngx-secret
            key: PAPERLESS_EMAIL_PASSWORD
    service:
      # -- Configures service settings for the chart.
      # @default -- See [values.yaml](./values.yaml)
      main:
        ports:
          http:
            port: 8000
      paperless-gpt:
        controller: paperless-gpt
        ports:
          gpt:
            port: 8080
    ingress:
      main:
        enabled: true
        ingressClassName: "external"
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Paperless-ngx"
          gethomepage.dev/description: "Document management system"
          gethomepage.dev/group: "Office"
          gethomepage.dev/icon: "paperless.png"
          hajimari.io/icon: mdi:file-document-multiple
          nginx.ingress.kubernetes.io/proxy-body-size: 64m
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        labels:
          gethomepage.dev/enabled: "true"
        hosts:
          - host: &host "paperless.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    persistence:
      data:
        enabled: true
        existingClaim: paperless-data
      log:
        enabled: true
        existingClaim: paperless-ngx-log
      media:
        enabled: true
        mountPath: /usr/src/paperless/media
        existingClaim: paperless-ngx-media
      export:
        enabled: true
        mountPath: /usr/src/paperless/export
        existingClaim: paperless-ngx-export
      consume:
        enabled: true
        mountPath: /usr/src/paperless/consume
        existingClaim: paperless-ngx-consume
      prompts:
        enabled: true
        #type: configMap
        type: emptyDir
        #name: paperless-gpt-prompts
        mountPath: /app/prompts
      hocr:
        enabled: true
        type: emptyDir
        mountPath: /app/hocr
      pdf:
        enabled: true
        type: emptyDir
        mountPath: /app/pdf
      gptdb:
        enabled: true
        type: emptyDir
        mountPath: /app/db
    postgresql:
      enabled: false
    mariadb:
      enabled: true
      # auth:
      #   database: paperless
      #   username: paperless
      #   password: changeme
      #   rootPassword: changeme
      primary:
        persistence:
          enabled: true
          existingClaim: paperless-mariadb
          size: 5Gi
    redis:
      enabled: true
      auth:
      #  password: changeme
        enabled: true
      master:
        persistence:
          enabled: true
          existingClaim: paperless-redis
          size: 5Gi
        replica:
          enabled: false
          replicaCount: 0
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
      limits:
        memory: 8Gi
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

    # If you have a containers section:
    containers:
      paperless:
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000

    # additionalContainers:
    #   - name: sidecar
    #     image: nginx:alpine
