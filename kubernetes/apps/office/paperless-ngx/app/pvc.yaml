---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: "cifs-paperless-data"
provisioner: smb.csi.k8s.io
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  source: "//${NAS_HOSTNAME}/paperless_ngx"
  subdir: "/data"
  mountOptions: "dir_mode=0777,file_mode=0777,uid=1000,gid=1000,noperm,mfsymlinks,noserverino"
  csi.storage.k8s.io/node-stage-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/node-stage-secret-namespace: "kube-system"
  csi.storage.k8s.io/provisioner-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/provisioner-secret-namespace: "kube-system"

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: "cifs-paperless-media"
provisioner: smb.csi.k8s.io
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  source: "//${NAS_HOSTNAME}/paperless_ngx"
  subdir: "/media"
  mountOptions: "dir_mode=0777,file_mode=0777,uid=1000,gid=1000,noperm,mfsymlinks,noserverino"
  csi.storage.k8s.io/node-stage-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/node-stage-secret-namespace: "kube-system"
  csi.storage.k8s.io/provisioner-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/provisioner-secret-namespace: "kube-system"

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: "cifs-paperless-log"
provisioner: smb.csi.k8s.io
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  source: "//${NAS_HOSTNAME}/paperless_ngx"
  subdir: "/log"
  mountOptions: "dir_mode=0777,file_mode=0777,uid=1000,gid=1000,noperm,mfsymlinks,noserverino"
  csi.storage.k8s.io/node-stage-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/node-stage-secret-namespace: "kube-system"
  csi.storage.k8s.io/provisioner-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/provisioner-secret-namespace: "kube-system"

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: "cifs-paperless-export"
provisioner: smb.csi.k8s.io
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  source: "//${NAS_HOSTNAME}/paperless_ngx"
  subdir: "/export"
  mountOptions: "dir_mode=0777,file_mode=0777,uid=1000,gid=1000,noperm,mfsymlinks,noserverino"
  csi.storage.k8s.io/node-stage-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/node-stage-secret-namespace: "kube-system"
  csi.storage.k8s.io/provisioner-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/provisioner-secret-namespace: "kube-system"

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: "cifs-paperless-consume"
provisioner: smb.csi.k8s.io
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  source: "//${NAS_HOSTNAME}/paperless_ngx"
  subdir: "/consume"
  mountOptions: "dir_mode=0777,file_mode=0777,uid=1000,gid=1000,noperm,mfsymlinks,noserverino"
  csi.storage.k8s.io/node-stage-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/node-stage-secret-namespace: "kube-system"
  csi.storage.k8s.io/provisioner-secret-name: "csi-driver-smb"
  csi.storage.k8s.io/provisioner-secret-namespace: "kube-system"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-data
  namespace: office
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: cifs-paperless-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-log
  namespace: office
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: cifs-paperless-log
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-media
  namespace: office
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 15Gi
  storageClassName: cifs-paperless-media
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-export
  namespace: office
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: cifs-paperless-export
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-consume
  namespace: office
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
  storageClassName: cifs-paperless-consume
