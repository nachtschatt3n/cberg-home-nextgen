---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: homepage
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      homepage:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/gethomepage/homepage
              tag: latest
            env:
              HOMEPAGE_ALLOWED_HOSTS: "homepage.${SECRET_DOMAIN}"
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 500m
                memory: 512Mi
            volumeMounts:
              - name: homepage-config
                mountPath: /app/config
                readOnly: true
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: homepage
        ports:
          http:
            port: 3000
    serviceMonitor:
      app:
        serviceName: homepage
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/proxy-cookie-path: "/"
          nginx.ingress.kubernetes.io/proxy-cookie-domain: "$host"
        hosts:
          - host: "homepage.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    configMap:
      app:
        data:
          kubernetes.yaml: |
            mode: cluster
          settings.yaml: ""
          custom.css: ""
          custom.js: ""
          bookmarks.yaml: |
            - Developer:
                - Github:
                    - abbr: GH
                      href: https://github.com/
          services.yaml: |
            - My First Group:
                - My First Service:
                    href: http://localhost/
                    description: Homepage is awesome
          widgets.yaml: |
            - kubernetes:
                cluster:
                  show: true
                  cpu: true
                  memory: true
                  showLabel: true
                  label: "cluster"
                nodes:
                  show: true
                  cpu: true
                  memory: true
                  showLabel: true
            - resources:
                backend: resources
                expanded: true
                cpu: true
                memory: true
                network: default
            - search:
                provider: duckduckgo
                target: _blank
          docker.yaml: ""
