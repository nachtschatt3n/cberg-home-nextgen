---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: mcpo
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 1
  install:
    remediation:
      retries: 1
  upgrade:
    cleanupOnFail: false
    remediation:
      retries: 1
  uninstall:
    keepHistory: false
  values:
    serviceAccount:
      create: false
      name: mcpo
    controllers:
      mcpo:
        initContainers:
          runtime-setup:
            image:
              repository: python
              tag: 3.11-slim
            command:
              - /bin/sh
              - -c
              - |
                set -e
                echo "Installing Node.js and npm..."
                apt-get update
                apt-get install -y curl ca-certificates gnupg
                mkdir -p /etc/apt/keyrings
                curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
                echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
                apt-get update
                apt-get install -y nodejs

                echo "Installing Python uv..."
                pip install --upgrade pip
                pip install uv

                echo "Installing MCP server npm packages..."
                npm install -g --prefix /shared \
                  @upstash/context7-mcp \
                  prometheus-mcp \
                  @modelcontextprotocol/server-github

                echo "Copying Node.js and tools..."
                mkdir -p /shared/bin
                cp /usr/bin/node /shared/bin/
                cp /usr/local/bin/uv /shared/bin/
                cp /usr/local/bin/uvx /shared/bin/

                echo "Creating wrapper scripts..."
                # Create npm wrapper
                echo '#!/bin/sh' > /shared/bin/npm
                echo 'export NODE_PATH="/shared/lib/node_modules"' >> /shared/bin/npm
                echo 'exec /shared/bin/node /shared/lib/node_modules/npm/bin/npm-cli.js "$@"' >> /shared/bin/npm
                chmod +x /shared/bin/npm

                # Create npx wrapper
                echo '#!/bin/sh' > /shared/bin/npx
                echo 'export NODE_PATH="/shared/lib/node_modules"' >> /shared/bin/npx
                echo 'exec /shared/bin/node /shared/lib/node_modules/npm/bin/npx-cli.js "$@"' >> /shared/bin/npx
                chmod +x /shared/bin/npx

                echo "Runtime setup complete"
                ls -la /shared/bin/
                ls -la /shared/lib/node_modules/ | head -20
        containers:
          app:
            image:
              repository: ghcr.io/open-webui/mcpo
              tag: git-44ce6d0
            env:
              - name: PATH
                value: "/shared/bin:/app/.venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
              - name: NODE_PATH
                value: "/shared/lib/node_modules"
              - name: PORT
                value: "8000"
              - name: API_KEY
                valueFrom:
                  secretKeyRef:
                    name: mcpo-api-key
                    key: api-key
              - name: PAPERLESS_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: mcpo-api-key
                    key: paperless-api-key
              - name: CONTEXT7_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: mcpo-api-key
                    key: context7-api-key
              - name: GITHUB_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: mcpo-api-key
                    key: github-token
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            args:
              - "--port"
              - "8000"
              - "--api-key"
              - "$(API_KEY)"
              - "--config"
              - "/config/config.json"
              - "--hot-reload"

    service:
      main:
        controller: mcpo
        type: ClusterIP
        ports:
          http:
            protocol: TCP
            enabled: true
            port: 8000
            targetPort: 8000

    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: mcpo.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - mcpo.${SECRET_DOMAIN}

    persistence:
      config:
        type: configMap
        name: mcpo-config
        advancedMounts:
          mcpo:
            app:
              - path: /config/config.json
                subPath: config.json
                readOnly: true
      runtime-tools:
        type: emptyDir
        advancedMounts:
          mcpo:
            app:
              - path: /shared
            runtime-setup:
              - path: /shared
