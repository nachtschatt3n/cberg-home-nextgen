---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: node-red
  namespace: home-automation
spec:
  interval: 30m
  chart:
    spec:
      chart: node-red
      version: 0.34.0
      sourceRef:
        kind: HelmRepository
        name: node-red
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: nodered/node-red
      tag: 3.1.3
      pullPolicy: IfNotPresent

    env:
      TZ: "${TIMEZONE}"
      NODE_RED_ENABLE_PROJECTS: "true"
      NODE_RED_ENABLE_SAFE_MODE: "false"

    service:
      main:
        ports:
          http:
            port: &port 1880

    ingress:
      # -- Enable an ingress resource for the server
      enabled: true
      # -- Defines which ingress controller will implement the resource
      className: "internal"
      # -- Additional ingress annotations
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        #  Ingress accepted hostnames
        - host: &host "node.${SECRET_DOMAIN}"
          paths:
              # -- The base path
            - path: /
              # --  Ingress type of path
              pathType: ImplementationSpecific

      tls:
        - secretName: node-red
          hosts:
          - node.${SECRET_DOMAIN}
          certificate:
            enabled: true
            issuerRef:
              kind: ClusterIssuer
              name: letsencrypt-production

    persistence:
      data:
        enabled: true
        existingClaim: node-red-data
        #storageClassName: csi-driver-nfs
        #accessMode: ReadWriteOnce
        #size: 1Gi
        mountPath: /data

    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        memory: 500Mi

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
