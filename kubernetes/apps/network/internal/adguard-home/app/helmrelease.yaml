---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: adguard-home
  namespace: network
spec:
  interval: 30m
  chart:
    spec:
      chart: adguard-home
      version: 0.19.0
      sourceRef:
        kind: HelmRepository
        name: rm3l
        namespace: flux-system
  install:
    remediation:
      retries: 1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 1
  values:
    # Default values for adguard-home.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    replicaCount: 1

    image:
      repository: adguard/adguardhome
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "v0.107.59"

    env:
      - name: ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            name: adguard-home-credentials
            key: admin-password
      - name: ADMIN_USERNAME
        valueFrom:
          secretKeyRef:
            name: adguard-home-credentials
            key: admin-username

    serviceAccount:
      # Specifies whether a service account should be created
      create: true

    services:
      adminPanel:
        type: LoadBalancer
        # -- Service annotations
        annotations: {}
        port: 3000
        # -- Internal cluster service IP for the Admin Panel (when applicable)
        clusterIP: ""
        # -- Set traffic policy for external traffic. Set to "Local" to preserve client ip address in case of service type "LoadBalancer" or "NodePort"
        externalTrafficPolicy:
        # -- Load balancer IP for the Admin Panel (when applicable)
        loadBalancerIP:
        # -- (int) Node port for the Admin Panel (when applicable)
        nodePort:
      http:
        type: LoadBalancer
        # -- Service annotations
        annotations: {}
        # -- Internal cluster service IP for HTTP (when applicable)
        clusterIP: ""
        # -- Set traffic policy for external traffic. Set to "Local" to preserve client ip address in case of service type "LoadBalancer" or "NodePort"
        externalTrafficPolicy:
        # -- Load balancer IP for HTTP (when applicable)
        loadBalancerIP:
        # -- (int) Node port for HTTP (when applicable)
        port: 80
        nodePort:
        # -- Dual-stack policy for HTTP
        ipFamilyPolicy:
        # -- Dual-stack families for HTTP, for dual-stack parameters see official kubernetes [dual-stack concept documentation](https://kubernetes.io/docs/concepts/services-networking/dual-stack/).
        ipFamilies:
      https:
        enabled: true
        type: LoadBalancer
        # -- Service annotations
        annotations: {}
        # -- Internal cluster service IP for HTTPS (when applicable)
        clusterIP: ""
        # -- Set traffic policy for external traffic. Set to "Local" to preserve client ip address in case of service type "LoadBalancer" or "NodePort"
        externalTrafficPolicy:
        # -- Load balancer IP for HTTPS (when applicable)
        loadBalancerIP:
        # -- (int) Node port for HTTPS (when applicable)
        nodePort:
        port: 443
        # -- Dual-stack policy for HTTPS
        ipFamilyPolicy:
        # -- Dual-stack families for HTTPS; for dual-stack parameters see official kubernetes [dual-stack concept documentation](https://kubernetes.io/docs/concepts/services-networking/dual-stack/).
        ipFamilies:
      dns:
        enabled: true
        type: LoadBalancer
        # -- Service annotations
        annotations: {}
        # -- Internal cluster service IP for DNS (when applicable)
        clusterIP: ""
        # -- Set traffic policy for external traffic. Set to "Local" to preserve client ip address in case of service type "LoadBalancer" or "NodePort"
        externalTrafficPolicy:
        # -- Load balancer IP for DNS (when applicable)
        loadBalancerIP: "192.168.55.5"
        tcp:
          port: 53
          nodePort:
        udp:
          port: 53
          nodePort:
        # -- Dual-stack policy for DNS
        ipFamilyPolicy:
        # -- Dual-stack families for DNS; for dual-stack parameters see official kubernetes [dual-stack concept documentation](https://kubernetes.io/docs/concepts/services-networking/dual-stack/).
        ipFamilies:
      dnsOverTls:
        enabled: true
        type: LoadBalancer
        # -- Service annotations
        annotations: {}
        # -- Internal cluster service IP for DNS over TLS (when applicable)
        clusterIP: ""
        # -- Set traffic policy for external traffic. Set to "Local" to preserve client ip address in case of service type "LoadBalancer" or "NodePort"
        externalTrafficPolicy:
        # -- Load balancer IP for DNS over TLS (when applicable)
        loadBalancerIP: "192.168.55.6"
        # -- (int) Node port for DNS over TLS (when applicable)
        port: 853
        nodePort:
        # -- Dual-stack policy for DNS over TLS
        ipFamilyPolicy:
        # -- Dual-stack families for DNS over TLS; for dual-stack parameters see official kubernetes [dual-stack concept documentation](https://kubernetes.io/docs/concepts/services-networking/dual-stack/).
        ipFamilies:
      dnsOverQuic:
        enabled: true
        type: LoadBalancer
        # -- Service annotations
        annotations: {}
        port1:
          port: 784
          nodePort:
        port2:
          port: 8853
          nodePort:
        # -- Internal cluster service IP for DNS Over QUIC (when applicable)
        clusterIP: ""
        # -- Set traffic policy for external traffic. Set to "Local" to preserve client ip address in case of service type "LoadBalancer" or "NodePort"
        externalTrafficPolicy:
        # -- Load balancer IP for DNS Over QUIC (when applicable)
        loadBalancerIP: "192.168.55.8"
        # -- Dual-stack policy for DNS Over QUIC
        ipFamilyPolicy:
        # -- Dual-stack families for DNS Over QUIC; for dual-stack parameters see official kubernetes [dual-stack concept documentation](https://kubernetes.io/docs/concepts/services-networking/dual-stack/).
        ipFamilies:
      dnscrypt:
        enabled: true
        type: LoadBalancer
        # -- Service annotations
        annotations: {}
        # -- Internal cluster service IP for DNSCrypt (when applicable)
        clusterIP: ""
        # -- Set traffic policy for external traffic. Set to "Local" to preserve client ip address in case of service type "LoadBalancer" or "NodePort"
        externalTrafficPolicy:
        # -- Load balancer IP for DNSCrypt (when applicable)
        loadBalancerIP: "192.168.55.7"
        tcp:
          port: 5443
          nodePort:
        udp:
          port: 5443
          nodePort:
        # -- Dual-stack policy for DNSCrypt
        ipFamilyPolicy:
        # -- Dual-stack families for DNSCrypt; for dual-stack parameters see official kubernetes [dual-stack concept documentation](https://kubernetes.io/docs/concepts/services-networking/dual-stack/).
        ipFamilies:

    ingresses:
      adminPanel:
        enabled: false
        className: "internal"
        annotations: {}
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        hosts:
          - host: admin.adguard-home-example.local
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls: []
        #  - secretName: chart-example-tls
        #    hosts:
        #      - chart-example.
      http:
        enabled: true
        className: "internal"
        annotations: {}
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        hosts:
          - host: &host adguard.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls: []
        #  - secretName: chart-example-tls
        #    hosts:
        #      - chart-example.
      https:
        enabled: false
        className: "internal"
        annotations:
          hajimari.io/icon: simple-icons:adguard
        hosts:
          - host: &host "adguard.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls:
          - hosts:
              - *host
            secretName: adguard-home-tls

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

    # -- Strategy used to replace old Pods by new ones
    strategy:
      type: Recreate

    # -- Rolling update strategy
    #rollingUpdate:
    #  maxSurge: 1
    #  maxUnavailable: 33%


    persistence:
      existingClaim: adguard-home-config

    backup:
      # -- Note that this depends on the Access Mode set for the persistent volume claim (PVC) specified.
      # -- As a consequence, backups will not be possible if the PVC access mode is set to ReadWriteOncePod (Kubernetes 1.22+),
      # -- since the volume will be accessible only to the sole Adguard Home pod.
      enabled: false
      # -- How frequently the Backup job should run. Cron Syntax, as supported by Kubernetes CronJobs
      schedule: "@daily"
      concurrencyPolicy: Forbid
      restartPolicy: OnFailure
      ttlSecondsAfterFinished: 300
      activeDeadlineSeconds: 1800
      backoffLimit: 1
      parallelism: 1
      imagePullPolicy: IfNotPresent
      resources: {}
      aws:
        # -- For now, only AWS is supported. Setting this to `false` (while `backup.enabled` is `true`) will cause a deployment error.
        enabled: true
        # -- AWS Access Key. Must have the permissions to write to the target bucket.
        accessKeyId: "my-aws-access-key-id"
        # -- AWS Secret Key. Must have the permissions to write to the target bucket.
        secretKey: "my-aws-secret-key"
        # -- Target destination bucket (absolute) in AWS S3, where the backup resources should be written
        s3:
          destination: "s3://path/to/my/adguard-home-backup-bucket"

    # -- Whether to enable bootstrapping the AdguardHome config file using the content in bootstrapConfig
    bootstrapEnabled: true

    bootstrapConfig:
      # -- AdGuard Home config. See [this page](https://github.com/AdguardTeam/AdGuardHome/wiki/Configuration#configuration-file)
      bind_host: 0.0.0.0
      bind_port: 80
      beta_bind_port: 0
      #users: {}
      #- name: ${ADMIN_USERNAME}
      #  password: ${ADMIN_PASSWORD}
      auth_attempts: 5
      block_auth_min: 15
      http_proxy: ""
      language: en
      debug_pprof: false
      web_session_ttl: 720
      dns:
        bind_hosts:
        - 0.0.0.0
        port: 53
        statistics_interval: 90
        querylog_enabled: true
        querylog_file_enabled: true
        querylog_interval: 168h
        querylog_size_memory: 1000
        anonymize_client_ip: false
        protection_enabled: true
        blocking_mode: default
        blocking_ipv4: ""
        blocking_ipv6: ""
        blocked_response_ttl: 10
        parental_block_host: family-block.dns.adguard.com
        safebrowsing_block_host: standard-block.dns.adguard.com
        ratelimit: 0
        ratelimit_whitelist: [192.168.0.0/16]
        refuse_any: true
        upstream_dns:
        - "[/kuma.mathiasuhl.com/]https://dns.cloudflare.com/dns-query"
        - "[/mathiasuhl.com/]192.168.31.61"
        - "[/uhl.cool/]192.168.55.101"
        - "https://dns.cloudflare.com/dns-query"
        - "tls://1dot1dot1dot1.cloudflare-dns.com"
        - "https://dns10.quad9.net/dns-query"
        upstream_dns_file: ""
        bootstrap_dns:
        - 1.1.1.1
        - 1.0.0.1
        - 9.9.9.10
        - 2620:fe::10
        - 2620:fe::fe:10
        all_servers: true
        fastest_addr: false
        fastest_timeout: 1s
        allowed_clients:
        - 192.168.0.0/16
        disallowed_clients: []
        blocked_hosts:
        - version.bind
        - id.server
        - hostname.bind
        trusted_proxies:
        - 127.0.0.0/8
        - ::1/128
        cache_size: 4194304
        cache_ttl_min: 0
        cache_ttl_max: 0
        cache_optimistic: true
        bogus_nxdomain: []
        aaaa_disabled: false
        enable_dnssec: false
        edns_client_subnet: false
        max_goroutines: 300
        ipset: []
        filtering_enabled: true
        filters_update_interval: 24
        parental_enabled: false
        safesearch_enabled: false
        safebrowsing_enabled: false
        safebrowsing_cache_size: 1048576
        safesearch_cache_size: 1048576
        parental_cache_size: 1048576
        cache_time: 30
        rewrites: []
        blocked_services: []
        upstream_timeout: 10s
        local_domain_name: lan
        resolve_clients: true
        use_private_ptr_resolvers: true
        local_ptr_upstreams: []
      tls:
        enabled: true
        server_name: "adguard.${SECRET_DOMAIN}"
        force_https: false
        port_https: 443
        port_dns_over_tls: 853
        port_dns_over_quic: 784
        port_dnscrypt: 0
        allow_unencrypted_doh: false
        strict_sni_check: false
        certificate_path: /opt/adguardhome/conf/certs/tls.crt
        private_key_path: /opt/adguardhome/conf/certs/tls.key
      filters:
      - enabled: true
        url: https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt
        name: AdGuard DNS filter
        id: 1
      - enabled: true
        url: https://adaway.org/hosts.txt
        name: AdAway Default Blocklist
        id: 2
      - enabled: true
        url: https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt
        name: WindowsSpyBlocker - Hosts spy rules
        id: 1641249001
      - enabled: true
        url: https://abp.oisd.nl/basic/
        name: OISD Blocklist Basic
        id: 1641249002
      - enabled: true
        url: https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SmartTV-AGH.txt
        name: Perflyst and Dandelion Sprout's Smart-TV Blocklist
        id: 1641249003
      - enabled: true
        url: https://raw.githubusercontent.com/DandelionSprout/adfilt/master/GameConsoleAdblockList.txt
        name: Game Console Adblock List
        id: 1641249004
      - enabled: true
        url: https://raw.githubusercontent.com/DandelionSprout/adfilt/master/GameConsoleAdblockList.txt
        name: Game Console Adblock List
        id: 1641249005
      - enabled: true
        url: https://raw.githubusercontent.com/DandelionSprout/adfilt/master/GameConsoleAdblockList.txt
        name: Game Console Adblock List
        id: 1641249006
      - enabled: true
        url: https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt
        name: EasyList Anti-CV
        id: 1641249007
      - enabled: true
        url: https://easylist.to/easylistgermany/easylistgermany.txt
        name: EasyList Germany
        id: 1641249008
      - enabled: true
        url: https://easylist-downloads.adblockplus.org/antiadblockfilters.txt
        name: Anti-Adblock Filters
        id: 1641249009
      whitelist_filters: []
      user_rules: []
      dhcp:
        enabled: false
        interface_name: ""
        dhcpv4:
          gateway_ip: ""
          subnet_mask: ""
          range_start: ""
          range_end: ""
          lease_duration: 86400
          icmp_timeout_msec: 1000
          options: []
        dhcpv6:
          range_start: ""
          lease_duration: 86400
          ra_slaac_only: false
          ra_allow_slaac: false
      clients: []
      log_compress: false
      log_localtime: false
      log_max_backups: 0
      log_max_size: 100
      log_max_age: 3
      log_file: ""
      verbose: false
      os:
        group: ""
        user: ""
        rlimit_nofile: 0
      schema_version: 12

    # -- Whether to add default volume mounts.
    defaultVolumeMountsEnabled: true

    # -- Additional Volume mounts
    extraVolumeMounts:
      - name: adguard-tls
        mountPath: /opt/adguardhome/conf/certs
        readOnly: true

    # -- Additional volumes
    extraVolumes:
      - name: adguard-tls
        secret:
          secretName: adguard-home-tls