---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: jellyfin
      version: 2.1.0
      sourceRef:
        kind: HelmRepository
        name: jellyfin
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: docker.io/jellyfin/jellyfin
      tag: 10.10.6
      pullPolicy: IfNotPresent

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      supplementalGroups:
        - 44  # video group for hardware acceleration

    securityContext:
      capabilities:
        add:
          - SYS_ADMIN
        drop:
          - ALL
      privileged: false

    service:
      main:
        type: ClusterIP
        ports:
          http:
            port: 8096

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        hosts:
          - host: &host "jellyfin.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: jellyfin-config
      media:
        enabled: true
        storageClass: cifs-media
        accessMode: ReadWriteMany
        size: 1Mi  # Size doesn't matter for existing shares

    # Hardware acceleration support
    extraVolumes:
      - name: hwa
        hostPath:
          path: /dev/dri

    extraVolumeMounts:
      - name: hwa
        mountPath: /dev/dri

    resources:
      requests:
        cpu: 100m
        memory: 250Mi
      limits:
        memory: 4Gi

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 1m

    probes:
      liveness:
        enabled: true
        custom: true
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
          exec:
            command:
              - /usr/local/bin/healthcheck
      readiness:
        enabled: true
        custom: true
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
          exec:
            command:
              - /usr/local/bin/healthcheck
      startup:
        enabled: true
        custom: true
        spec:
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 30
          exec:
            command:
              - /usr/local/bin/healthcheck
